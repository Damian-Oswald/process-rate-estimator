# Results

This chapter presents the results of the process rate estimator run over all the available dates, depths and columns. Once the process rate estimator is run as instructed in the previous chapter, the results can be found in the sub-directory `scripts/run-process-rate-estimator/output`, or [in the corresponding sub-directory of the GitHub repository](https://github.com/Damian-Oswald/process-rate-estimator/blob/main/scripts/run-process-rate-estimator/output/estimated-process-rates.csv).

## Looking at the process rates over time

@fig-process-rates-tabset show all results, from column 1 to 12 and depths 7.5 cm, 30 cm, 60 cm, 90 cm and 120 cm.
Note that while the measurements are certainly correlated over time and among depth layers, the process rate estimates are performed independently -- the estimates of one day do not influence the estimates of another day *per se*.

::: {#fig-process-rates-tabset}
::: {.column-screen-inset-right}
```{r}
#| eval: true
#| echo: false
#| results: asis
cat("::: {.panel-tabset}\n\n")
for (column in 1:12) {
    
    if(column==1) {
        cat("## Column 1\n\n")
    } else {
        cat("##", column, "\n\n")
    }
    
    cat("::: {.panel-tabset}\n\n")
    
    for (depth in PRE::getParameters()$depths) {
        
        if(depth==7.5) {
            cat("## Depth =", depth, "cm\n\n")
        } else {
            cat("##", depth, "cm\n\n")
        }
        
        cat(sprintf("![](scripts/run-process-rate-estimator/output/visualized-process-rates-C%s-D%s.svg){width=\"100%%\"}\n\n", column, depth))
    }
    cat(":::\n\n")
}

cat(":::\n\n")
```
:::

Estimated process rates over time for all columns and depths. *Click on the column or depth buttons on the top of the tab set to navigate between the visualizations.*

:::

Notably, looking though all the results, we can observe quite a few cases where the estimations for the process rates are negative -- which we know to be impossible. An overview of the processes, columns and depth layers affected by negative process rate estimates is provided in [table @tbl-uncertainty].

:::{.column-page}

```{r}
#| label: tbl-uncertainty
#| echo: false
#| layout-ncol: 3
#| tbl-cap: Percentage of negative process rate estimates (number of days with negative rates divided by total number of days) for each column, depth and process. Instances of 0% are left blank in this table.
library(magrittr)
library(knitr)
library(kableExtra)
options(knitr.kable.NA = '')

data <- read.csv(file.path("scripts","run-process-rate-estimator","output","estimated-process-rates.csv"))

process <- "Nitrification"
df <- with(data, tapply(get(process)<0, list(column, depth), mean)) * 100
df2 <- round(df)
colnames(df2) <- paste(colnames(df2), "cm")
for (i in 1:5) df2[,i] <- paste0(df2[,i],"%")
df2[df2=="0%"] <- NA
df2 %>%
    kbl(row.names = TRUE, caption = process, label = process, align = c("rrrrr")) %>%
    column_spec(2, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,1])+1]) %>%
    column_spec(3, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,2])+1]) %>%
    column_spec(4, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,3])+1]) %>%
    column_spec(5, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,4])+1]) %>%
    column_spec(6, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,5])+1])

process <- "Denitrification"
df <- with(data, tapply(get(process)<0, list(column, depth), mean)) * 100
df2 <- round(df)
colnames(df2) <- paste(colnames(df2), "cm")
for (i in 1:5) df2[,i] <- paste0(df2[,i],"%")
df2[df2=="0%"] <- NA
df2 %>%
    kbl(row.names = TRUE, caption = process, label = process, align = c("rrrrr")) %>%
    column_spec(2, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,1])+1]) %>%
    column_spec(3, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,2])+1]) %>%
    column_spec(4, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,3])+1]) %>%
    column_spec(5, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,4])+1]) %>%
    column_spec(6, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,5])+1])

process <- "Reduction"
df <- with(data, tapply(get(process)<0, list(column, depth), mean)) * 100
df2 <- round(df)
colnames(df2) <- paste(colnames(df2), "cm")
for (i in 1:5) df2[,i] <- paste0(df2[,i],"%")
df2[df2=="0%"] <- NA
df2 %>%
    kbl(row.names = TRUE, caption = process, label = process, align = c("rrrrr")) %>%
    column_spec(2, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,1])+1]) %>%
    column_spec(3, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,2])+1]) %>%
    column_spec(4, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,3])+1]) %>%
    column_spec(5, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,4])+1]) %>%
    column_spec(6, background = colorRampPalette(c("white","#fc5d5e"))(101)[round(df[,5])+1])

```

:::

@tbl-uncertainty shows that nitrification rates are particularly affected by this phenomenon -- especially at lower depths -- with five cases where negative estimates were made for every single day. Denitrification and reduction rates are much less affected.

## Results of the cumulative process rates

The results presented in [table @tbl-by-depth-and-variety] shows the cumulative nitrous oxide nitrification ($\ce{N2O}_{\text{nit}}$), denitrification ($\ce{N2O}_{\text{den}}$), consumption ($\ce{N2O}_{\text{consumed}}$), and production ($\ce{N2O}_{\text{produced}}$). The N~2~O production is hereby defined as:

$$\ce{N2O}_{\text{production}} = \ce{N2O}_{\text{nit}} + \ce{N2O}_{\text{den}}$${#eq-N2O-produced}

Meanwhile, the consumption is simply the cumulative N~2~O reduction.

```{r}
#| echo: false
#| tbl-colwidths: [22,14,16,16,16,16]
#| label: tbl-by-depth-and-variety
#| tbl-cap: "Overall results of the process rate estimator (μ ±  σ) by depth layer and variety. N~2~O~nit~ is the sum of the nitrification rate over the entire estimated period, while N~2~O~den~ is the sum of the denitrification rate. For reference, this table also displays N~2~O~produced~, which is simply N~2~O~nit~ + N~2~O~den~, as well as N~2~O~consumed~, which is the sum of the reduction rate."

# read the results
data <- read.csv(file.path("scripts","run-process-rate-estimator","output","estimated-process-rates.csv"))

# compute the sum of process rates over entire time
for (x in c("Nitrification", "Denitrification", "Reduction")) {
    assign(x, 0.001 * tapply(data[,x], with(data, list(variety, depth, column)), PRE::nonNegative, f = sum))
}
names(dimnames(Nitrification)) <- names(dimnames(Denitrification)) <- names(dimnames(Reduction)) <- c("Variety", "Depth", "Column")

# compute total produced nitrogen
Production <- Nitrification + Denitrification

# write function to paste mean ± sd
f <- function(x) paste(signif(mean(x, na.rm = TRUE), 2), "±", signif(sd(x, na.rm = TRUE), 2))

# bind results to data frame
df <- cbind(reshape2::melt(apply(Nitrification, 1:2, f)),
            pod = reshape2::melt(apply(Denitrification, 1:2, f))[,3],
            red = reshape2::melt(apply(Production, 1:2, f))[,3],
            den = reshape2::melt(apply(Reduction, 1:2, f))[,3])
df <- df[order(df[,"Variety"]),]
colnames(df) <- c("Variety", "Depth [cm]", "N~2~O~nit~", "N~2~O~den~", "N~2~O~produced~", "N~2~O~consumed~")
df[,1] <- as.character(df[,1])
df[((1:nrow(df))[-c((0:4)*5+1)]),1] <- ""
knitr::kable(df, row.names = FALSE, align = "llrrrr")
```

```{r}
#| eval: false
#| echo: false
df <- na.omit(reshape2::melt(Reduction))
model <- lm(value ~ as.factor(Depth) + as.factor(Column), df)
anova(model)
```

Owing to all processes' significant divergence of the linear model's residuals from a normal distribution, as determined by the Shapiro-Wilk normality test, the Kruskal-Wallis Rank Sum Test was employed to examine group variation among the varieties. These respective tests were performed utilizing the relevant functions -- `shapiro.test` and `kruskal.test`, from the `stats` package, as referred to in [@r2023language].

Among the different varieties, there were no significant group differences detected for neither N~2~O~nit~ nor N~2~O~den~, and hence also not for N~2~O~produced~. However, significant differences among the varieties for N~2~O~consumed~ were detected (p = 0.01098).

```{r}
#| echo: false
#| tbl-colwidths: [36,16,16,16,16]
#| label: tbl-by-variety
#| tbl-cap: "Values in @tbl-by-depth-and-variety aggregated by variety. The superscript compact letter display (CLD) indicates significant differences among groups based on Dunn's Kruskal-Wallis multiple comparison (α = 0.05)."

# STATISTICAL TESTS:
# ==================
cld <- function(formula, data, order) {
    PT <- FSA::dunnTest(formula, data = data)
    CLD <- rcompanion::cldList(comparison = PT$res$Comparison,
                        p.value = PT$res$P.adj,
                        threshold = 0.05)
    CLD[order,]
}
DEPTH <- VARIETY <- data.frame()
for (j in c("Nitrification", "Denitrification", "Production", "Reduction")) {
    df <- na.omit(reshape2::melt(get(j), value.name = "Process"))
    for (i in c("Variety", "Depth")) df[,i] <- as.factor(df[,i])
    model <- lm(Process ~ Depth, data = df)
    PT <- FSA::dunnTest(Process ~ Depth, data = df)
    CLD <- rcompanion::cldList(comparison = PT$res$Comparison,
                        p.value = PT$res$P.adj,
                        threshold = 0.05)
    CLD <- CLD[c(4,2,3,5,1),]
    VARIETY <- rbind(VARIETY, data.frame(Process = j, cld(Process ~ Variety, df, 1:4)))
    DEPTH <- rbind(DEPTH, data.frame(Process = j, cld(Process ~ Depth, df, c(4,2,3,5,1))))
}
processes <- c("Nitrification", "Denitrification", "Production", "Reduction")

# bind results to data frame
df <- cbind(nit = reshape2::melt(apply(Nitrification, 1, f)),
            pod = reshape2::melt(apply(Denitrification, 1, f)),
            red = reshape2::melt(apply(Production, 1, f)),
            den = reshape2::melt(apply(Reduction, 1, f)))
df <- data.frame(rownames(df), df)
for (i in 1:4) {
    CLD <- unlist(subset(VARIETY, subset = Process==processes[i], select = Letter))
    if(length(unique(CLD))>1) df[,i+1] <- paste0(df[,i+1], " ^*", CLD,"*^")
}
colnames(df) <- c("Variety", "N~2~O~nit~", "N~2~O~den~", "N~2~O~produced~", "N~2~O~consumed~")
knitr::kable(df, row.names = FALSE, align = "lrrrr")
```

Conversely, N~2~O~consumed~ did not show any significant group differences with respect to the depth layers. However, all other processes did: N~2~O~nit~ (p = 1.005e-07) nor N~2~O~den~ (p = 0.001029), and hence also for N~2~O~produced~ (p = 3.883e-08).

```{r}
#| echo: false
#| tbl-colwidths: [22,14,16,16,16,16]
#| label: tbl-by-depth
#| tbl-cap: "Values in @tbl-by-depth-and-variety aggregated by depth layer. The superscript compact letter display (CLD) indicates significant differences among groups based on Dunn's Kruskal-Wallis multiple comparison (α = 0.05)."

# bind results to data frame
df <- cbind(nit = reshape2::melt(apply(Nitrification, 2, f)),
            pod = reshape2::melt(apply(Denitrification, 2, f)),
            red = reshape2::melt(apply(Production, 2, f)),
            den = reshape2::melt(apply(Reduction, 2, f)))
df <- data.frame(x = rep("",5), d = rownames(df), df)
colnames(df) <- c("", "Depth [cm]", "N~2~O~nit~", "N~2~O~den~", "N~2~O~produced~", "N~2~O~consumed~")
for (i in 1:4) {
    CLD <- unlist(subset(DEPTH, subset = Process==processes[i], select = Letter))
    if(length(unique(CLD))>1) df[,i+2] <- paste0(df[,i+2], " ^*", CLD,"*^")
}
knitr::kable(df, row.names = FALSE, align = "llrrrr")
```

## Analysis of variance

### Nitrification

```{r}
#| echo: false
#| results: asis
data <- read.csv(file.path("scripts","run-process-rate-estimator","output","estimated-process-rates.csv"))
df <- reshape2::melt(with(data, tapply(Nitrification, list(depth, column), mean)), varnames = c("depth", "column"), value.name = "Nitrification")
model <- lm(Nitrification ~ depth * as.factor(column), df)
options(knitr.kable.NA = "")
df <- as.data.frame(anova(model))
df <- data.frame(signif(df, 3), stars = gtools::stars.pval(df$`Pr(>F)`))
colnames(df)[5:6] <- c("p-value", " ")
knitr::kable(df, format = "pipe")
```

### Denitrification

```{r}
#| echo: false
#| results: asis
df <- reshape2::melt(with(data, tapply(Denitrification, list(depth, column), mean)), varnames = c("depth", "column"), value.name = "Denitrification")
model <- lm(Denitrification ~ depth, df)
df <- as.data.frame(anova(model))
df <- data.frame(signif(df, 3), stars = gtools::stars.pval(df$`Pr(>F)`))
colnames(df)[5:6] <- c("p-value", " ")
knitr::kable(df, format = "pipe")
```

### Reduction

```{r}
#| echo: false
#| results: asis
df <- reshape2::melt(with(data, tapply(Reduction, list(depth, column), mean)), varnames = c("depth", "column"), value.name = "Reduction")
model <- lm(Reduction ~ depth * as.factor(column), df)
df <- as.data.frame(anova(model))
df <- data.frame(signif(df, 3), stars = gtools::stars.pval(df$`Pr(>F)`))
colnames(df)[5:6] <- c("p-value", " ")
knitr::kable(df, format = "pipe")
```
